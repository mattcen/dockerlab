version: '3'

networks:
  lab:
    external: true

services:

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.6.3
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    networks:
      - lab
    ports:
      # The HTTP port
      - 192.168.1.1:80:80
      # The Web UI (enabled by --api.insecure=true)
      #- 8080:8080
    labels:
      traefik.enable: true
      #traefik.http.routers.api.rule: Host(`traefik.${TOP_DOMAIN:-docker.localhost}`)
      traefik.http.routers.api.rule: Host(`traefik.scouthack`)
      traefik.http.routers.api.service: api@internal
      traefik.http.routers.api.middlewares: auth
      # sample users/password test/test and test2/test2
      traefik.http.middlewares.auth.basicauth.users: test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/,test2:$$apr1$$d9hr9HBB$$4HxwgUir3HP4EsggP/QNo0
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  sshpiper:
    image: farmer1992/sshpiperd@sha256:961d9e3b4e2a7f3a872638c9cd4efe631dec1b88e4804f783695029567d21183
    networks:
      - lab
    ports:
      - 192.168.1.1:22:2222
    hostname: sshpiper
    volumes:
      - ./sshpiper:/var/sshpiper
      - ./secrets/sshpiper:/etc/ssh/ssh_host_rsa_key
    restart: unless-stopped
