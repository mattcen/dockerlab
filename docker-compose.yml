version: '3'

networks:
  lab:
    external: true

services:

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --providers.docker
      - --providers.docker.network=lab
      - --providers.docker.watch
      - --providers.docker.exposedByDefault=false
      - --providers.docker.defaultRule=Host(`{{ index .Labels "com.docker.stack.namespace" }}.scouthack`)
      - --api.insecure=true
      - --entryPoints.web.address=:80
    networks:
      - lab
    ports:
      # The HTTP port
      - 192.168.1.1:80:80
      - 127.0.0.1:80:80
      # The Web UI (enabled by --api.insecure=true)
      #- 8080:8080
    labels:
      traefik.enable: true
      #traefik.http.routers.api.rule: Host(`traefik.${TOP_DOMAIN:-docker.localhost}`)
      traefik.http.routers.api.rule: Host(`traefik.scouthack`)
      traefik.http.routers.api.service: api@internal
      traefik.http.routers.api.middlewares: auth
      # sample users/password test/test and test2/test2
      traefik.http.middlewares.auth.basicauth.users: test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/,test2:$$apr1$$d9hr9HBB$$4HxwgUir3HP4EsggP/QNo0
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  sshpiper:
    image: farmer1992/sshpiperd:full-v1.0.101
    networks:
      - lab
    ports:
      - 192.168.1.1:22:2222
      - 127.0.0.1:22:2222
    hostname: sshpiper
    environment:
      PLUGIN: docker
      SSHPIPERD_LOG_LEVEL: trace
    #command: "/sshpiperd/sshpiperd --log-level=trace /sshpiperd/plugins/docker"
    volumes:
      - ./sshpiper:/var/sshpiper
      - ./secrets/ssh_host_ed25519_key:/etc/ssh/ssh_host_ed25519_key
      # So that sshpiper can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
